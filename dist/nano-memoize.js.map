{"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBA,GAEA,SAAS,2BAAK,CAAC,EAAE;IACf,IAAI,IAAI,IAAE,IACT,IAAI,EAAE,OAAO,CAAC;IACf,OAAO,KAAG,KAAM,CAAA,IAAE,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,gBAAc,CAAA;AAC9D;AACA,SAAS,0CAAY,EAAE,EAAC,CAAC,EAAE;IAC1B;;;;;;;CAOA,GACA,KAAM,CAAA,IAAE,CAAC,CAAA;IACT,IAAI,QAAQ,EAAE,KAAK,IAAI,2BAAK,KAC3B,IAAI,EAAE,EACN,IAAI,EAAE,EACN,QAAQ,IAAI,OACZ,GACA,IAAI,SAAS,GAAG,EAAE;QAAE,OAAO,WAAW,WAAW;YAChD,IAAG,GAAG;gBACL,MAAM,MAAM,CAAC;gBACb;YACD,CAAC;YACD,sDAAsD;YACtD,EAAE,MAAM,CAAE,KAAI;YACd,EAAE,MAAM,CAAC,KAAI;QACb,GAAE,EAAE,MAAM;IACX,GACA,IAAI,EAAE,MAAM,GAAC,KAAK,EAAE,MAAM,GAAC,WAAW,IAAI,CAAC,EAC3C,KAAK,EAAE,MAAM,GAAG,EAAE,MAAM,GAAG,CAAC,EAC5B,UAAU,EAAE,OAAO,EACnB,OAAO,EAAE,UAAU,EACnB,GAAG,8BAA8B;IACjC,IAAG,GAAG,MAAM,KAAG,KAAK,CAAC,EAAE,MAAM,IAAI,CAAC,OAAO;QACxC,uDAAuD;QACvD,IAAK,SAAS,CAAC,EAAE;YACf,IAAG,MAAM,IAAI,KAAK;YAClB,IAAI;YACJ,OAAO,MAAM,GAAG,CAAC,MAAO,CAAA,AAAC,CAAC,KAAG,EAAE,IAAI,MAAM,GAAG,CAAC,GAAE,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,KAAI,CAAC,AAAD;QACvE;QACA,IAAI;IACL,OACA,mEAAmE;IACnE,yEAAyE;IACzE,IAAI,WAAW;QACd,IAAI,IAAI,WAAS,UAAU,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAG;QACrD,MAAM,EAAE,IAAE,GAAI;YACb,IAAI,OAAO,CAAC,CAAC,EAAE;YACf,IAAI,WAAS,IAAI,IAAI,KAAK,MAAM,KAAK,GAAG;gBACvC,IAAI,IAAI;gBACR,MAAO,EAAE,IAAI,KAAM,CAAA,KAAK,GAAG,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,SAAS,CAAC,EAAE,KAAG,IAAI,CAAC,EAAE,AAAD,IAAO,mBAAmB;gBACnG,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,mBAAmB;;YAC7C,CAAC;QACF;QACA,sHAAsH;QACtH,OAAO,AAAC,CAAC,KAAG,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,IAAI,EAAC,CAAC,CAAC,EAAE,GAAG,UAAU;IACzD;IAED,uBAAuB;IACvB,EAAE,KAAK,GAAG,WAAW;QACpB,MAAM,KAAK;QACX,IAAI,EAAE;QACN,IAAI,EAAE;IACP;IACA,EAAE,IAAI,GAAG,WAAW;QAAE,OAAO,IAAI;eAAI,MAAM,IAAI;SAAG,GAAG,EAAE,KAAK,EAAE;IAAE;IAChE,EAAE,MAAM,GAAG,WAAW;QAAE,OAAO,IAAI;eAAI,MAAM,MAAM;SAAG,GAAG,EAAE,KAAK,EAAE;IAAE;IACpE,OAAO;AACR","sources":["src/index.js"],"sourcesContent":["/*\r\nMIT License\r\n\r\nCopyright (c) 2018-2023 Simon Y. Blackwell\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\n\tThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\nfunction vrgs(f) {\r\n\t\tvar s = f+\"\",\r\n\t\t\ti = s.indexOf(\"...\");\r\n\t\treturn i>=0 && (i<s.indexOf(\")\") || s.indexOf(\"arguments\")>=0);\r\n}\r\nfunction nanomemoize(fn,o) {\r\n\t/*o = {\r\n\t\tserializer, // used to serialize arguments of single argument functions, multis are not serialized\r\n\t\tequals, // equality tester, will force use of slower multiarg approach even for single arg functions\r\n\t\tmaxAge, // max cache age is ms, set > 0 && < Infinity if you want automatic clearing\r\n\t\tmaxArgs, // max args to use for signature\r\n\t\tvargs = vrgs(fn) // set to true if function may have variable or beyond-signature arguments, default is best attempt at infering\r\n\t  } = {}\r\n\t*/\r\n\to || (o={});\r\n\tvar vargs = o.vargs || vrgs(fn),\r\n\t\tk = [], // multiple arg function arg key cache\r\n\t\tv = [], // multiple arg function result cache\r\n\t\tcache = new Map(), // single arg function key/value cache\r\n\t\tu, // flag indicating a unary arg function is in use for clear operation\r\n\t\td = function(key) { return setTimeout(function() {\r\n\t\t\tif(u) {\r\n\t\t\t\tcache.delete(key);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// dealing with multi-arg function, c and k are Arrays\r\n\t\t\tk.splice (key,1);\r\n\t\t\tv.splice(key,1);\r\n\t\t\t},o.maxAge);\r\n\t\t},\r\n\t\tc = o.maxAge>0 && o.maxAge<Infinity ? d : 0, // cache change timeout,\r\n\t\teq = o.equals ? o.equals : 0,\r\n\t\tmaxargs = o.maxArgs,\r\n\t\tsrlz = o.serializer,\r\n\t\tf; // memoized function to return\r\n\t\tif(fn.length===1 && !o.equals && !vargs) {\r\n\t\t\t// for single argument functions, just use a Map lookup\r\n\t\t\tf =  function(a) {\r\n\t\t\t\t\tif(srlz) a = srlz(a);\r\n\t\t\t\t\tvar r;\r\n\t\t\t\t\treturn cache.get(a) || ((!c||c(a)),cache.set(a,r = fn.call(this, a)),r);\r\n\t\t\t};\r\n\t\t\tu = 1;\r\n\t\t} else {\r\n\t\t// for multiple arg functions, loop through a cache of all the args\r\n\t\t// looking at each arg separately so a test can abort as soon as possible\r\n\t\tf = function() {\r\n\t\t\tvar l = maxargs||arguments.length, kl = k.length, i =-1;\r\n\t\t\twhile(++i<kl) { // k is an array of arrays of args, each array represents a call signature\r\n\t\t\t\tvar args = k[i];\r\n\t\t\t\tif (maxargs!=null || args.length === l) {\r\n\t\t\t\t\tvar j = -1;\r\n\t\t\t\t\twhile (++j < l && (eq ? eq(arguments[j], args[j]) : arguments[j]===args[j])) {\t}// compare each arg\r\n\t\t\t\t\tif (j === l) return v[i] //the args matched;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// set change timeout only when new value computed, hits will not push out the tte, but it is arguable they should not\r\n\t\t\treturn (!c||c(i)),v[i] = fn.apply(this,k[i] = arguments);\r\n\t\t}\r\n\t}\r\n\t// reset all the caches\r\n\tf.clear = function() {\r\n\t\tcache.clear();\r\n\t\tk = [];\r\n\t\tv = [];\r\n\t};\r\n\tf.keys = function() { return u ? [...cache.keys()] : k.slice(); };\r\n\tf.values = function() { return u ? [...cache.values()] : v.slice(); };\r\n\treturn f;\r\n}\r\n\r\nexport {nanomemoize,nanomemoize as default}\r\n\r\n"],"names":[],"version":3,"file":"nano-memoize.js.map"}